{"ast":null,"code":"import React from\"react\";import TableRow from'./TableRow';import{jsx as _jsx}from\"react/jsx-runtime\";var Table=function Table(_ref){var pokedex=_ref.pokedex;return/*#__PURE__*/_jsx(\"tbody\",{children:pokedex.map(function(user,i){return/*#__PURE__*/_jsx(TableRow,{id:pokedex[i].id,num:pokedex[i].num,name:pokedex[i].name,img:pokedex[i].img,type:pokedex[i].type.join(', '),weaknesses:pokedex[i].weaknesses.join(', '),height:pokedex[i].height,weight:pokedex[i].weight,nextEvolution:!pokedex[i].next_evolution?pokedex[i].name+' is the final Evolution':pokedex[i].next_evolution.map(function(user,i){return user.name;}),prevEvolution:!pokedex[i].prev_evolution?pokedex[i].name+' is the base Pokémon':pokedex[i].prev_evolution.map(function(user,i){return user.name;})},i);})});};export default Table;","map":{"version":3,"sources":["/Users/jonathan/Developer/Personal/ZTM/pokedex/src/components/Table.js"],"names":["React","TableRow","Table","pokedex","map","user","i","id","num","name","img","type","join","weaknesses","height","weight","next_evolution","prev_evolution"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,2CAGA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CAC3B,mBACI,uBAEQA,OAAO,CAACC,GAAR,CAAY,SAACC,IAAD,CAAMC,CAAN,CAAY,CACpB,mBACI,KAAC,QAAD,EAEI,EAAE,CAAEH,OAAO,CAACG,CAAD,CAAP,CAAWC,EAFnB,CAGI,GAAG,CAAEJ,OAAO,CAACG,CAAD,CAAP,CAAWE,GAHpB,CAII,IAAI,CAAEL,OAAO,CAACG,CAAD,CAAP,CAAWG,IAJrB,CAKI,GAAG,CAAEN,OAAO,CAACG,CAAD,CAAP,CAAWI,GALpB,CAMI,IAAI,CAAEP,OAAO,CAACG,CAAD,CAAP,CAAWK,IAAX,CAAgBC,IAAhB,CAAqB,IAArB,CANV,CAOI,UAAU,CAAET,OAAO,CAACG,CAAD,CAAP,CAAWO,UAAX,CAAsBD,IAAtB,CAA2B,IAA3B,CAPhB,CAQI,MAAM,CAAET,OAAO,CAACG,CAAD,CAAP,CAAWQ,MARvB,CASI,MAAM,CAAEX,OAAO,CAACG,CAAD,CAAP,CAAWS,MATvB,CAUI,aAAa,CAAE,CAACZ,OAAO,CAACG,CAAD,CAAP,CAAWU,cAAZ,CACXb,OAAO,CAACG,CAAD,CAAP,CAAWG,IAAX,CAAkB,yBADP,CAEXN,OAAO,CAACG,CAAD,CAAP,CAAWU,cAAX,CAA0BZ,GAA1B,CAA8B,SAACC,IAAD,CAAOC,CAAP,CAAa,CACvC,MAAOD,CAAAA,IAAI,CAACI,IAAZ,CACH,CAFD,CAZR,CAeI,aAAa,CAAE,CAACN,OAAO,CAACG,CAAD,CAAP,CAAWW,cAAZ,CACXd,OAAO,CAACG,CAAD,CAAP,CAAWG,IAAX,CAAkB,sBADP,CAEXN,OAAO,CAACG,CAAD,CAAP,CAAWW,cAAX,CAA0Bb,GAA1B,CAA8B,SAACC,IAAD,CAAOC,CAAP,CAAa,CACvC,MAAOD,CAAAA,IAAI,CAACI,IAAZ,CACH,CAFD,CAjBR,EACSH,CADT,CADJ,CAuBH,CAxBD,CAFR,EADJ,CA+BH,CAhCD,CAkCA,cAAeJ,CAAAA,KAAf","sourcesContent":["import React from \"react\";\nimport TableRow from './TableRow';\n\n\nconst Table = ({ pokedex }) => {\n    return (\n        <tbody>\n            {\n                pokedex.map((user,i) => {\n                    return (\n                        <TableRow \n                            key={i}\n                            id={pokedex[i].id}\n                            num={pokedex[i].num}\n                            name={pokedex[i].name}\n                            img={pokedex[i].img}\n                            type={pokedex[i].type.join(', ')}\n                            weaknesses={pokedex[i].weaknesses.join(', ')}\n                            height={pokedex[i].height}\n                            weight={pokedex[i].weight}\n                            nextEvolution={!pokedex[i].next_evolution ? \n                                pokedex[i].name + ' is the final Evolution' : \n                                pokedex[i].next_evolution.map((user, i) => {\n                                    return user.name;\n                                })}\n                            prevEvolution={!pokedex[i].prev_evolution ? \n                                pokedex[i].name + ' is the base Pokémon' : \n                                pokedex[i].prev_evolution.map((user, i) => {\n                                    return user.name;\n                                })}\n                        />\n                    );\n                })\n            }\n        </tbody>\n    )\n} \n\nexport default Table;"]},"metadata":{},"sourceType":"module"}