{"ast":null,"code":"var _jsxFileName = \"/Users/jonathan/Developer/Personal/ZTM/pokedex/src/components/Card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = _ref => {\n  _s();\n\n  let {\n    img,\n    name,\n    num,\n    id,\n    types\n  } = _ref;\n  const [show, toggleShow] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => toggleShow(show),\n      children: [\"toggle: \", show ? 'show' : 'hide']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this), show && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc bg-white dib br3 pa3 ma2 grow bw2 shadow-5 card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${img}`,\n        alt: `pokemon${id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-text\",\n          children: [num, \". \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"card-text\",\n          children: [\"Type: \", !types[1] ? types[0] : types[0] + ', ' + types[1]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this) // const Card = ({ img, name, num, id, types}) => {\n  //     return (\n  //         <tr>\n  //             <td>\n  //                 <img \n  //                 src={`${img}`} \n  //                 alt={`pokemon${id}`}\n  //                 height='75px'\n  //                 width='75px'\n  //                 />\n  //             </td>\n  //             <td>{num}</td>\n  //             <td>{name}</td>\n  //             <td>{!types[1] ? types[0] : types[0] + ', ' + types[1]}</td>\n  //             <td onClick={onClick}>+</td>\n  //         </tr>\n  // <div className='tc bg-white dib br3 pa3 ma2 grow bw2 shadow-5 card'>\n  //     <img src={`${img}`} alt={`pokemon${id}`}/>\n  //     <div>\n  //         <h2 className='card-text'>{num}. <strong>{name}</strong></h2>\n  //         <h2 className='card-text'>Type: {!types[1] ? types[0] : types[0] + ', ' + types[1]}</h2>\n  //     </div>\n  // </div>\n  ;\n};\n\n_s(Card, \"b2Zln0p2SRUsKSd+n0FbtIiHXpM=\");\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/jonathan/Developer/Personal/ZTM/pokedex/src/components/Card.js"],"names":["React","useState","Card","img","name","num","id","types","show","toggleShow"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,IAAI,GAAG,QAAkC;AAAA;;AAAA,MAAjC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,GAAb;AAAkBC,IAAAA,EAAlB;AAAsBC,IAAAA;AAAtB,GAAiC;AAC3C,QAAM,CAACC,IAAD,EAAOC,UAAP,IAAqBT,KAAK,CAACC,QAAN,CAAe,KAAf,CAA3B;AAEA,sBACE;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAE,MAAMQ,UAAU,CAACD,IAAD,CAAjC;AAAA,6BAAkDA,IAAI,GAAG,MAAH,GAAY,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGEA,IAAI,iBAEJ;AAAK,MAAA,SAAS,EAAC,oDAAf;AAAA,8BACI;AAAK,QAAA,GAAG,EAAG,GAAEL,GAAI,EAAjB;AAAoB,QAAA,GAAG,EAAG,UAASG,EAAG;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA,qBAA2BD,GAA3B,qBAAiC;AAAA,sBAASD;AAAT;AAAA;AAAA;AAAA;AAAA,kBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA,+BAAiC,CAACG,KAAK,CAAC,CAAD,CAAN,GAAYA,KAAK,CAAC,CAAD,CAAjB,GAAuBA,KAAK,CAAC,CAAD,CAAL,GAAW,IAAX,GAAkBA,KAAK,CAAC,CAAD,CAA/E;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAkBJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGQ;AACA;AACA;AACA;AACA;AACA;AACA;AA1CJ;AA6CH,CAhDD;;GAAML,I;;KAAAA,I;AAkDN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst Card = ({ img, name, num, id, types}) => {\n    const [show, toggleShow] = React.useState(false);\n    \n    return (\n      <div>\n        <button onClick={() => toggleShow(show)}>toggle: {show ? 'show' : 'hide'}</button>    \n        {\n        show && \n        \n        <div className='tc bg-white dib br3 pa3 ma2 grow bw2 shadow-5 card'>\n            <img src={`${img}`} alt={`pokemon${id}`}/>\n            <div>\n                <h2 className='card-text'>{num}. <strong>{name}</strong></h2>\n                <h2 className='card-text'>Type: {!types[1] ? types[0] : types[0] + ', ' + types[1]}</h2>\n            </div>\n        </div>\n        }\n      </div>\n    \n  \n\n// const Card = ({ img, name, num, id, types}) => {\n//     return (\n//         <tr>\n//             <td>\n//                 <img \n//                 src={`${img}`} \n//                 alt={`pokemon${id}`}\n//                 height='75px'\n//                 width='75px'\n//                 />\n//             </td>\n//             <td>{num}</td>\n//             <td>{name}</td>\n//             <td>{!types[1] ? types[0] : types[0] + ', ' + types[1]}</td>\n//             <td onClick={onClick}>+</td>\n//         </tr>\n\n\n        // <div className='tc bg-white dib br3 pa3 ma2 grow bw2 shadow-5 card'>\n        //     <img src={`${img}`} alt={`pokemon${id}`}/>\n        //     <div>\n        //         <h2 className='card-text'>{num}. <strong>{name}</strong></h2>\n        //         <h2 className='card-text'>Type: {!types[1] ? types[0] : types[0] + ', ' + types[1]}</h2>\n        //     </div>\n        // </div>\n\n    )\n}\n\nexport default Card"]},"metadata":{},"sourceType":"module"}